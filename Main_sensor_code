#include <Servo.h>
int redCounter = 0;
int blueCounter = 0;
int greenCounter = 0;
int yellowCounter = 0;
int redFrequency = 0;
int greenFrequency = 0;
int blueFrequency = 0;
int servoPin = 3;
Servo Servo1;

int redColor = 0;
int greenColor = 0;
int blueColor = 0;

#define S0 4
#define S1 5
#define S2 6
#define S3 7
#define sensorOut 8

void setup() {
  // Setting the outputs
  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);
  pinMode(S3, OUTPUT);
  
  // Setting the sensorOut as an input
  pinMode(sensorOut, INPUT);
  
  // Setting frequency scaling to 20%
  digitalWrite(S0,HIGH);
  digitalWrite(S1,LOW);
  
   // Begins serial communication 
  Serial.begin(9600);

  // Tell the arduino which pin we're going to be operating off of
  Servo1.attach(servoPin);
}
void loop() {
  // Setting RED (R) filtered photodiodes to be read
  digitalWrite(S2,LOW);
  digitalWrite(S3,LOW);
  
  // Reading the output frequency
  redFrequency = pulseIn(sensorOut, LOW);
  redColor = map(redFrequency, 40, 190, 255, 0);
  
   // Printing the RED (R) value
  Serial.print("R = ");
  Serial.print(redColor);
  delay(100);
  
  // Setting GREEN (G) filtered photodiodes to be read
  digitalWrite(S2,HIGH);
  digitalWrite(S3,HIGH);
  
  // Reading the output frequency
  greenFrequency = pulseIn(sensorOut, LOW);
  greenColor = map(greenFrequency, 110, 235, 255, 0); 
  
  // Printing the GREEN (G) value  
  Serial.print(" G = ");
  Serial.print(greenColor);
  delay(100);
 
  // Setting BLUE (B) filtered photodiodes to be read
  digitalWrite(S2,LOW);
  digitalWrite(S3,HIGH);
  
  // Reading the output frequency
  blueFrequency = pulseIn(sensorOut, LOW);
  blueColor = map(blueFrequency, 30, 100, 255, 0);
  
  // Printing the BLUE (B) value 
  Serial.print(" B = ");
  Serial.println(blueColor);
  delay(100);

  // Checks the current detected color and prints
  // a message in the serial monitor
 if(redColor+60 > blueColor && greenColor+50 > blueColor ){
    Serial.println("YELLOW");
    yellowCounter++;
    Serial.print("Yellow Count: ");
    Serial.println(yellowCounter);
     }
  else if(redColor > greenColor && redColor > blueColor){
      Serial.println("RED");
      redCounter++;
      Serial.print("Red Count: ");
      Serial.println(redCounter);
  }
  else if(greenColor > redColor && greenColor+20 > blueColor){
    Serial.println("GREEN");
    greenCounter++;
    Serial.print("Green Count: ");
    Serial.println(greenCounter);
  }
  else if(blueColor > redColor && blueColor > greenColor){
    Serial.println("BLUE");
    blueCounter++;
    Serial.print("Blue Count: ");
    Serial.println(blueCounter);
  }
  
delay(100);

// Now we need to indicate to the servos when to operate, which we can do by 
// telling the servos to only operate in the direction we want it to once a 
// "check threshold" has been passed (probably 10 instances of the same color
// being recorded)

if(yellowCounter == 10){
  Servo1.write(180);
  Serial.println("Rotating 180 Degrees");
  delay(5000);
  Servo1.write(0);
  yellowCounter = 0;
}
if(blueCounter == 10){
  Servo1.write(135);
  Serial.println("Rotating 120 Degrees");
  delay(5000);
  Servo1.write(0);
  blueCounter = 0;
}
if(redCounter == 10){
  Servo1.write(90);
  Serial.println("Rotating 90 Degrees");
  delay(5000);
  Servo1.write(0);
  redCounter = 0;
}
if(greenCounter == 10){
  Servo1.write(0);
  Serial.println("Rotating 0 Degrees");
  delay(5000);
  Servo1.write(0);
  greenCounter = 0;
}




}
